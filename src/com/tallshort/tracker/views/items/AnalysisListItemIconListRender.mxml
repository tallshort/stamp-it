<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 					
		  xmlns:s="library://ns.adobe.com/flex/spark"		   
		  width="100%" height="100%" >
	
 
	<fx:Script>
		<![CDATA[
			import com.tallshort.tracker.model.EvaluationType;
			import com.tallshort.tracker.utils.DateUtil;
			import com.tallshort.tracker.views.items.Count;
			import com.tallshort.tracker.views.items.FiveStar;
			import com.tallshort.tracker.views.items.Percentage;
			import com.tallshort.tracker.views.items.ThreeStar;
			import com.tallshort.tracker.views.items.Thumb;
			
			import spark.components.HGroup;
			import spark.components.Label;
			import spark.components.VGroup;
			
			public var _data:Object;
			
			override public function set data(value:Object):void
			{
							
				_data = value;
				var rating:Number = Number(value.rating);
				var evaluation:String = value.evaluation as String;
				removeAllElements();		
				
				
				var outgroup:HGroup = new HGroup();
				outgroup.horizontalAlign = "left";
				outgroup.verticalAlign = "middle";
				outgroup.paddingBottom = 5;
				outgroup.paddingTop = 5;
				outgroup.visible = true;
				outgroup.percentWidth = 100;
				addElement(outgroup);
				
//				<s:VGroup width="100%">
//					<s:Label text="{data.title}" width="100%" verticalAlign="bottom" maxDisplayedLines="1" />
//					<s:Label visible="{data.description != ''}" includeInLayout="{data.description != ''}" maxDisplayedLines="1" width="100%" color="#999999" fontSize="20" text="{data.description}" />
//				</s:VGroup>
					
				var vgroup:VGroup = new VGroup();
				vgroup.visible = true;
				vgroup.percentWidth = 100;
				vgroup.paddingBottom = 5;
				vgroup.paddingTop = 5;	
				
				var label:Label = new Label();
				label.visible = true;				
				label.text = value.name as String;
				label.maxDisplayedLines = 1;
				label.enabled = false;
				label.verticalCenter = "bottom";								
				label.percentWidth = 100;
				vgroup.addElement(label);
				
				//<s:Label fontSize="18" fontStyle="italic" color="#999999" text="{DateUtil.dateString(data.startDate)}" />				
				
				var dateLabel:Label = new Label();
				dateLabel.setStyle("fontSize",18);
				dateLabel.setStyle("fontStyle","italic");
				dateLabel.setStyle("color", "#999999");	
				dateLabel.percentWidth = 100;
				dateLabel.text = DateUtil.dateString(value.start_date as Date);
				vgroup.addElement(dateLabel);
				outgroup.addElement(vgroup);
				
				var icongroup:HGroup = new HGroup();
				icongroup.visible = true;
				icongroup.gap = 0;
				icongroup.horizontalAlign = "right";
				//icongroup.percentWidth = 40;
				outgroup.addElement(icongroup);	
				
				//<s:Label text="{data.name}" width="20%" verticalAlign="middle" />	
				if (evaluation==EvaluationType.FIVE_STARS)
				{
					addFiveStarsIcon(rating,icongroup);
				}
				else if (evaluation==EvaluationType.THREE_STARS)
				{
					addThreeStarsIcon(rating,icongroup);
				}
				else if (evaluation==EvaluationType.THUMBS)
				{
					addThumbIcon(rating,icongroup);
				}
				else if (evaluation==EvaluationType.PERCENTAGE)
				{
					addPercentageIcon(rating,icongroup);
				}
				else if (evaluation==EvaluationType.COUNT)
				{
					addCountIcon(rating,icongroup);
				}
				else 
				{
					addPercentageIcon(rating,icongroup);	
				}

			}
			
			override public function get data():Object
			{
				return _data;
			}
			
			private function addFiveStarsIcon(rating:Number,hgroup:HGroup):void
			{
				var ratingStar:FiveStar;
				for(var i:int = 0; i < 5; i++)
				{
					ratingStar = new FiveStar();
					if(rating >= 1)
					{
						ratingStar.currentState = "fullStar";
						rating -= 1;
					}
					else if(rating >= .5)
					{
						ratingStar.currentState = "halfStar";
						rating -= .5;
					}
					else
						ratingStar.currentState = "noStar";
					
					hgroup.addElement(ratingStar);
				}
			}
			
			private function addThreeStarsIcon(rating:Number,hgroup:HGroup):void
			{				
				var ratingInt:int = Math.floor(rating);
				var ratingStar:ThreeStar = new ThreeStar();
				if ( ratingInt == EvaluationType.LEVEL_ONE)
				{
					ratingStar.currentState = "redStar";
				}
				else if ( ratingInt == EvaluationType.LEVEL_TWO)
				{
					ratingStar.currentState = "yellowStar";
				}
				else if ( ratingInt == EvaluationType.LEVEL_THREE)
				{
					ratingStar.currentState = "greenStar";
				}
				hgroup.addElement(ratingStar);
			}
			
			private function addThumbIcon(rating:Number,hgroup:HGroup):void
			{
				var ratingInt:int = Math.floor(rating);
				var ratingStar:Thumb = new Thumb();
				if ( ratingInt == EvaluationType.LEVEL_ONE)
				{
					ratingStar.currentState = "downThumb";
				}
				else if ( ratingInt == EvaluationType.LEVEL_TWO)
				{
					ratingStar.currentState = "upThumb";
				}				
				hgroup.addElement(ratingStar);
			}
			
			private function addPercentageIcon(rating:Number,hgroup:HGroup):void
			{
				var ratingInt:int = Math.floor(rating);
				var percent:Percentage = new Percentage();
				percent.percent = ratingInt+"%";
				if (rating<60)
				{
					percent.currentState = "redColor";
					
				}
				hgroup.addElement(percent);
			}
			
			private function addCountIcon(rating:Number,hgroup:HGroup):void
			{
				var ratingInt:int = Math.floor(rating);
				var count:Count = new Count();
				count.count = ratingInt;						
				hgroup.addElement(count);
			}
			
		]]>
	</fx:Script>
	<s:layout>
		<s:VerticalLayout paddingLeft="10"  paddingRight="5"/>
	</s:layout>
</s:ItemRenderer>
